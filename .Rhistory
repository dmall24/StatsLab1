knitr::opts_chunk$set(echo = TRUE)
meanscore <- c(85,90,93)
ggplot(meanscore, aes(x = classtime, y = score))
install.packages("ggplot2")
library("ggplot2")
meanscore <- c(85,90,93)
ggplot(meanscore, aes(x = classtime, y = score))
meanscore <- c(85,90,93)
hist(meanscore)
#ggplot(meanscore, aes(x = classtime, y = score))
library(dplyr)
meanscore <- c(85,90,93)
hist(meanscore)
#ggplot(meanscore, aes(x = classtime, y = score))
knitr::kable(meanscore)
y <- c(1,5,6,4,8,2,11,13,5)
solvemean <-function(y){
meany <- sum(y)/length(y)
sdy <- (y[i] - meany)^2
return (temp)
}
solvemean(y)
mean(y)
y <- c(1,5,6,4,8,2,11,13,5)
sort_y <- sort(y)
y <- c(1,5,6,4,8,2,11,13,5)
sort_y <- sort(y)
L1 <- length(y)/2
L2 <- (length(y)/2)+1
sort_y[L1]
sort_y[L2]
(sort_y[L1]+sort_y[L2])/2
sections <- c("morning","afternoon","evening")
meanscore <- c(85,90,93)
data3 <- data.frame(sections,meanscore)
View(data3)
sections <- c("morning","afternoon","evening")
meanscore <- c(85,90,93)
data3 <- data.frame(sections,meanscore)
library(ggplot2)
ggplot(data3)
sections <- c("morning","afternoon","evening")
scores <- c(85,90,93)
data3 <- data.frame(sections,scores)
library(ggplot2)
ggplot(data3)
install.packages("tidyverse")
one <- sample(1:6,1000, replace=TRUE)
two <- sample(1:6,1000, replace=TRUE)
combined <- one+two
table(combined)/1000
#> combined
#>     2     3     4     5     6     7     8     9    10    11    12
#> 0.027 0.056 0.081 0.094 0.150 0.185 0.132 0.105 0.087 0.057 0.026
one <- sample(1:6,1000, replace=TRUE)
two <- sample(1:6,1000, replace=TRUE)
combined <- one+two
table(combined)/1000
rep(x=c(1:10),3)
rep(x=c(1:10),each=3)
first = rep(1:6, each=6)
second = rep(1:6,6)
sum_rolls = first+second
sum_rolls
table(sumrolls)/length(sum_rolls)
table(sum_rolls)/length(sum_rolls)
one <- sample(1:6,1000, replace=TRUE)
two <- sample(1:6,1000, replace=TRUE)
combined <- one+two
table(combined)/1000
siming <- table(combined)/1000
truth <- table(sum_rolls)/length(sum_rolls)
truth-siming
sample(c("A","B"), 20, replace = TRUE, prob = c(.8, .2))
sample(LETTERS, 100, replace=TRUE)
table(sample(LETTERS,100, replace=TRUE))
lettstring <- sample(letters, 50*5, replace=TRUE)
stringlett <- matrix(lettstring, ncol=5)
View(stringlett)
paste(stringlett[1,], collapse="")
paste(stringlett[5,], collapse="")
paste(stringlett[5,])
my_letters <- sample(letters,50*5,replace=TRUE, prob =c("a"=0.9))
my_letters <- sample(letters,50*5,replace=TRUE, prob =c(0.5,0.4,0.3,0.2,0.5,0.5,0.4,0.3,0.2,0.5,0.5,0.4,0.3,0.2,0.5,0.5,0.4,0.3,0.2,0.5,0.5,0.4,0.3,0.2,0.5,0.8))
my_letters
table(my_letters)
1+1
12
?rbinom
1+1
12+12
words
install.packages("colorspace")
1+1
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
group1 <- c(10,12,14,16,18,20)
group2 <- c(sample(10:20,6))
randotest <- function(a,b,sampling=1000){
meanfora <- mean(a)
meanforb <- mean(b)
diffinmeans <- meanfora - meanforb
means <- c(a,b)
mean_differences <- c()
for(i in 1:sampling){
resample <- sample(means)
newamean <- mean(resample[1:length(a)])
newbmean <- mean(resample[(length(a)+1):length(means)])
mean_differences[i] <- newamean-newbmean
}
plotting <- qplot(mean_differences)+
geom_histogram(color="orange")+
geom_vline(xintercept=diffinmeans, color ="red")+
theme_classic()
p_value <- length(mean_differences[mean_differences >= diffinmeans])/length(sampling)
outputq1 <- list(mean_of_a = meanfora,
mean_of_b = meanforb,
difference = diffinmeans,
plot = plotting,
pvalue = p_value)
return(outputq1)
}
randotest(group1,group2,1000)
a <- rnorm(10,5,1)
a
b <- runif(10,1,10)
plot(a,b)
cor(a,b)
a <- runif(10,2,9)
plot(a,b)
cor(a,b)
A <- matrix(rnorm(25,0,1),ncol=5,nrow=5)
A
B <- c(1,3,2,4,3)
cor(A,B)
X <- c(1,4,3,2,5,4,3,6,7,8)
Y <- c(1,3,6,7,8,2,8,7,6,9)
cor(X,Y)
cor.test(X,Y)
answer <- cor.test(X,Y)
answer$p.value
answer$estimate
knitr::opts_chunk$set(echo = TRUE)
X <- c(1,4,3,2,5,4,3,6,7,8)
Y <- c(1,3,6,7,8,2,8,7,6,9)
q1ans <- cor.test(X,Y)
q1ans$p.value
install.packages("ggrepel")
install.packages(c("cli", "data.table", "DescTools", "gh", "isoband", "magrittr", "pillar", "processx", "ps", "rlang", "rmdfiltr", "vctrs"))
sample(X)
sample(X)
sample(X)
sample(X)
sample(X)
X
sample(X)
sample(X)
sample(X)
cor(sample(X),sample(Y))
cor(sample(X),sample(Y))
cor(sample(X),sample(Y))
cor(sample(X),sample(Y))
X <- c(1,4,3,2,5,4,3,6,7,8)
Y <- c(1,3,6,7,8,2,8,7,6,9)
# A
q1ans <- cor.test(X,Y)
q1ans$p.value
#B
library(ggplot2)
library(ggrepel)
simnull <- replicate(1000,cor(sample(X),sample(Y)))
X <- c(1,4,3,2,5,4,3,6,7,8)
Y <- c(1,3,6,7,8,2,8,7,6,9)
# A
q1ans <- cor.test(X,Y)
q1ans$p.value
#B
library(ggplot2)
library(ggrepel)
simnull <- replicate(1000,cor(sample(X),sample(Y)))
hist(simnull)
cor(X,Y)
X <- c(1,4,3,2,5,4,3,6,7,8)
Y <- c(1,3,6,7,8,2,8,7,6,9)
simxy <- replicate(1000,sum(sample(X),sample(y)))
X <- c(1,4,3,2,5,4,3,6,7,8)
Y <- c(1,3,6,7,8,2,8,7,6,9)
simxy <- replicate(1000,sum(sample(X),sample(Y)))
X <- c(1,4,3,2,5,4,3,6,7,8)
Y <- c(1,3,6,7,8,2,8,7,6,9)
simxy <- replicate(1000,sum(sample(X),sample(Y)))
hist(simxy)
?count
Y <- c(10,9,8,7,6,5,4,3,2,1,2,3,4,5,6,7,8,9,10)
X <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19)
count(X)
q1data <- data.frame(X,Y)
View(q1data)
ggplot(q1data, aes(x=X, y=Y))+
geom_point()
library(ggplot2)
ggplot(q1data, aes(x=X, y=Y))+
geom_point()
X <- c(1,4,3,2,5,4,3,6,7,8)
Y <- c(1,3,6,7,8,2,8,7,6,9)
sort(X)
sort(Y)
xmax <- sort(X)
ymax <- sort(y)
xmax <- sort(X)
ymax <- sort(Y)
xmax*ymax
sum(xmax*ymax)
simxy <- replicate(1000,sum(sample(X)*sample(Y)))
hist(simxy)
max(simxy)
a <- rnorm(10,3,7)
b <- rnorm(10,0,16)
b <- rnorm(10,1,16)
?rnorm
b <- rnorm(10,4.5,1)
a <- rnorm(10,4.1,1)
b <- rnorm(10,11,3)
t.test(a,b,paired=TRUE)
library(ggplot2)
1+1
1+2
[letters]
letters
